# lines with # are ignored

# replace with yours !
username SOMETHING@SOMETHING
password SOMETHINGELSE

# what the bot is to be summoned with
# one separate line per entry. If there are spaces the entire set will be necessary
# for instance :
# summon stupid
# means that the bot will answer to "stupid <command>"
# note that multi-word summons are NOT supported
summon mchtron
summon tron

# disabled features/commands
# out of : help, company, jackpot, rekt, donger, mc, cowsay, cardsinbrackets
# as with "summon", only one per line
#disabled rekt

# disabled by default as additional programs are required :
# requires cowsay
#disabled cowsay
#disabled cowthink
# requires toilet
#disabled toilet
# requires the Pillow library for Python 3
#disabled cardgen

# pyexec executes python calls with exec(), which means executed code has access to the running instance in pretty much every way
# use with EXTREME CAUTION !
disabled pyexec

# for the "py" function
# basically we will screen each line and weed out "exec", "eval", "import" and so on
# it's not too annoying and always that much more security so..
# i recommend running mchtron as a user with low privileges
#disabled pybandages


# the delimiters for cards for the cardsinbrackets functions
# obviously, that feature has to be enabled..
carddelimiters [[ ]]


# what the help message should say
# line breaks and whitespace should be preserved
# format :
# helpmsg <line feed>
# <message> <line feed>
# helpmsgend

helpmsg
Commands :
----------

"mc" searches on http://magiccards.info/ :
    tron mc o:"Counter target spell"

"cardgen" generates cards:
	tron cardgen [image link]
	<title> - <cost>
	<type>
	[rule text]
	
"py" can execute Python programs. Syntax :
	` ` `
	<your program>
	` ` `
	Remove spaces from code markers (` ` `)
	
"donger" produces dongers :
    tron donger <lenny, wizard-lenny, spider-lenny, wall> [text]

"jackpot" spins a slot machine.

"rekt" helps maintain your cred.
    You can pass it a name to explain who got rekt.

"company" makes you feel less alone.

"cowsay", "cowthink" and "toilet" are classic ASCII art generators.
    Example :
        tron cowsay -f dragon-and-cow.cow I'm a [Clockwork Dragon]
helpmsgend


# helpmsgcommand entries work the same way as helpmsg
# they are called with "mchtron help <command>" if a relevant one exists

helpmsgcommand cardgen
Format :
	tron cardgen [image link]
    <title> - <cost>
    <type>
    <rule text>

There HAS to be a line feed between each entry.

[image link] is optional and has to be a direct link to an image. Not all formats supported.

<title> and <cost> separated by the first " - " found.

<cost> can accept mixed numbers, letters and curly-bracketed entries. For instance, X13S{W/P}{2/W} is a valid cost (X+13 generic + snow + phyrexian white +  monocolored hybrid white)

<type> can be anything. Encountered space-surrounded dashes(" - ") are replaced with long dashes (" â€” ").

[rule text] is optional. Line feeds are preserved, symbols can be embedded using curly brackets. For instance, {T} is the tap symbol.


Fonts and other things are messy because of the Pillow library's not ideal support for anti-aliasing. Sorry about that.
helpmsgcommandend

helpmsgcommand donger
Format :
	tron donger <lenny, wizard-lenny, spider-lenny, wall> [text]
	Prints the right donger, with appropriately-placed text.
helpmsgcommandend


helpmsgcommand py
Format :
	tron py
	` ` `
	<your program>
	` ` `
	
Remove spaces from code markers (` ` `), if they were grouped it would break formatting.
You HAVE to input a line feed every time. Sorry.
You can write "Python" after the first code marker to enable syntax coloring.

Many restrictions are placed on programs, which are run in a separate python instance. 
Keywords allowing dangerous actions such as "import" "exec" and the like will result in the line they are in being removed from the program, probably breaking it.
However, time and random are automatically imported.
helpmsgcommandend

helpmsgcommand rekt
Format :
	tron rekt [name]
	
Will pick four "rekt" variations from a list and print a checkmark for at least one.
[name] is optional, if it is passed the output will mention "[name] just got :"
helpmsgcommandend


helpmsgcommand cowsay
Format :
	tron cowsay [options] <what to say>
	
Direct call to the corresponding program (which therefore must have been installed on the computer hosting the bot).
This means all the regular command line options are available. To get a list :
	tron cowsay -h

An option has been added, list-files, which lists the different cowfiles available :
	tron cowsay list-files

This commands works very much the same way as cowthink and toilet.
helpmsgcommandend


helpmsgcommand cowthink
Format :
	tron cowthink [options] <what to say>
	
Direct call to the corresponding program (which therefore must have been installed on the computer hosting the bot).
This means all the regular command line options are available. To get a list :
	tron cowthink -h

An option has been added, list-files, which lists the different cowfiles available :
	tron cowthink list-files

This commands works very much the same way as cowsay and toilet.
helpmsgcommandend


helpmsgcommand toilet
Format :
	tron toilet [options] <what to say>

Direct call to the corresponding program (which therefore must have been installed on the computer hosting the bot).
This means all the regular command line options are available. To get a list :
	tron toilet -h

An option has been added, list-files, which lists the different cowfiles available :
	tron toilet list-files

Note that since TOIlet is essentially FIGlet with added colouring, there's not much of a reason to support it since colouring isn't preserved.
	
This commands works very much the same way as cowsay and cowthink.
helpmsgcommandend


# properties switches to be added later :
# - whether to use emoji (in card costs, etc)
# - whether to display images
